version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: devmonitor_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: devmonitor
      POSTGRES_USER: devmonitor_user
      POSTGRES_PASSWORD: devmonitor_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devmonitor_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devmonitor_user -d devmonitor"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: devmonitor_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devmonitor_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

    # Laravel Backend
  backend:
      build:
        context: ./backend
        dockerfile: Dockerfile
      container_name: devmonitor_backend
      restart: unless-stopped
      working_dir: /var/www
      environment:
        - APP_ENV=local
        - APP_DEBUG=true
        - DB_CONNECTION=pgsql
        - DB_HOST=postgres
        - DB_PORT=5432
        - DB_DATABASE=devmonitor
        - DB_USERNAME=devmonitor_user
        - DB_PASSWORD=devmonitor_pass
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - REVERB_HOST=0.0.0.0
        - REVERB_PORT=8080
        - REVERB_SCHEME=http
      volumes:
        - ./backend:/var/www
        - /var/www/vendor
        - /var/www/node_modules
      networks:
        - devmonitor_network
      depends_on:
        postgres:
          condition: service_healthy
        redis:
          condition: service_healthy